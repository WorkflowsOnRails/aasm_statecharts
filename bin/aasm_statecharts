#!/usr/bin/env ruby

require 'optparse'
require_relative '../lib/aasm_statecharts'


def parse_command_line!
  options = {
    all: false,
    directory: './doc',
    format: 'png',
  }

  formats = AASM_StateChart::Renderer::FORMATS.join(', ')

  parser = OptionParser.new do |opts|
    opts.banner = "Usage: aasm_statechart [options] <model> [models ...]\n   Where <model> is the lower case, underscored model name.  Ex:  'my_model' for the class MyModel\n\n   Options:"

    opts.on_tail('-v', '--version', 'version of this gem') do
      puts AASM_StateChart::VERSION
      exit(0)
    end

    opts.on('-a', '--all', 'Render all ActiveRecord models using AASM') do
      options[:all] = true
    end

    opts.on('-d', '--directory directory',
            "Output to a specific directory (default: #{options[:directory]})") do |directory|
      options[:directory] = directory
    end

    opts.on('-t', '--table', 'Create a state transition table') do
      options[:transition_table] = true
    end

    opts.on('-f', '--file-type type',
            "Output in the specified format (default: #{options[:format]}), which must be one of the following: #{formats}.") do |format|
      format = format.downcase

      unless AASM_StateChart::Renderer::FORMATS.include?(format)
        puts "error: #{format} is not a recognized file format."
        puts "The file format must be one of the following: #{formats}."
        exit(1)
      end

      options[:format] = format
    end

    opts
  end

  parser.parse!

  if !options[:all] && ARGV.empty?
    puts parser
    exit(1)
  end

  [options, ARGV]
end

optparse.parse!
ARGV.each do |model|
  options[:models] << model
end

AASM_StateChart::AASM_Statecharts.new(options).run
